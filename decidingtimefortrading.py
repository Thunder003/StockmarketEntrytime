# -*- coding: utf-8 -*-
"""DecidingTimeforIndradayStock.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1_DxRAVViQcE8NjPuiF__vMSwJWPyia59
"""

import pandas as pd
import yfinance as yf
import pandas_datareader as web
import numpy as np
import datetime as dt
import matplotlib.pyplot as plt
plt.style.use('fivethirtyeight')

pip install yfinance

from google.colab import files
files.upload()

stock=pd.ExcelFile("StocksNifty.xlsx")
stock=stock.parse(0)
assets=list(stock['Symbol'])

# assets=['COALINDIA.NS', 'M&M.NS', 'ICICIBANK.NS']

data=yf.download(assets,'2020-07-27','2020-09-10', interval="2m")

data.head(n=190)

my_stocks=data['Open']
my_stocks1=data['Close']
dic={}
final=pd.DataFrame(columns =['Company', '5 min +','5 min -','10 min +','10 min -','15 min +','15 min -', '20 min +','20 min -', '30 min +','30 min -','35 min +', '35 min -'])
# lis=['asc','2','2','2','2','2','2','2','2','2','2','2']
# final.insert(0,lis)

# Number of 1 min candles in a day 
# print(my_stocks1['BAJFINANCE.NS'][373])
# Number of 2 min candles in a day
for i in range(0, 188): 
  print(my_stocks1['BAJFINANCE.NS'][i])

minutes=['5 min', '10 min', '15 min', '20 min', '30 min','35 min']
jum=[5,10,15,20,20,35]
print(len(my_stocks))
p=0
for c in my_stocks1.columns.values:
   dic=[]
   cp=0
   cn=0
  #  dic['Company']=c
   dic.append(c)
   for j in range(0, len(minutes)): 
     cp=0
     cn=0
     for i in range(0,len(my_stocks)-74,74):
            if (my_stocks1[c][jum[j]+i]-my_stocks1[c][i])>0 and (my_stocks1[c][74+i]-my_stocks1[c][i])>0:
              cp+=1
            if (my_stocks1[c][jum[j]+i]-my_stocks1[c][i])<0 and (my_stocks1[c][74+i]-my_stocks1[c][i])<0:
              cn+=1
     dic.append(cp)
     dic.append(cn)      
            # dic[c+' '+'positive'+' '+minutes[j]]=cp
            # dic[c+' '+'Negative'+' '+minutes[j]]=cn    
    #  dic[minutes[j]+' '+'+']=cp
    #  dic[minutes[j]+' '+'-']=cn 
  #  print(dic)         
  #  NF=pd.DataFrame(dic,index=[0]) 
  #  print(dic)
   final.loc[p]=dic
   p+=1
  #  final.append(dic, ignore_index=True)

valuestock=pd.DataFrame()
for c in range(0,len(minutes)):
    valuestock[minutes[c]]=final.loc[:,[minutes[c]+' '+'+', minutes[c]+' '+'-']].sum(axis=1)
# final['5 min sum']=final.loc[:,['5 min +','5 min -']].sum(axis=1)
# final
valuestock
# del final['5 min sum']

for i in valuestock.columns.values:
  plt.plot(valuestock[i],label=i)
plt.title('Time to decide the best stock for Intraday')
plt.xlabel('Index equivalent company name')
plt.ylabel('Time')
plt.legend(valuestock.columns.values, loc='upper left')
plt.show()

#Checking if day first 1 min/2 min candle trend can give profit in next 5 min for data of 1 min candle from 04-09-20 to 09-09-20
p=0
minutes1=['1 min','2 min']
investingcomstrategy=pd.DataFrame(columns =['Company', '1 min +','1 min -', '2 min +','2 min -'])
jum=[1,2]
co=0
for c in my_stocks1.columns.values:
   dic=[]
   cp=0
   cn=0
  #  dic['Company']=c
   dic.append(c)
   for j in range(0, len(minutes1)): 
     cp=0
     cn=0
    #  print(co)
     for i in range(0,len(my_stocks),373):
            if (my_stocks1[c][jum[j]+i]-my_stocks1[c][i])>0 and (my_stocks1[c][5+i]-my_stocks1[c][i])>0:
              cp+=1
            if (my_stocks1[c][jum[j]+i]-my_stocks1[c][i])<0 and (my_stocks1[c][5+i]-my_stocks1[c][i])<0:
              cn+=1
            co+=1
     dic.append(cp)
     dic.append(cn)      
            # dic[c+' '+'positive'+' '+minutes[j]]=cp
            # dic[c+' '+'Negative'+' '+minutes[j]]=cn    
    #  dic[minutes[j]+' '+'+']=cp
    #  dic[minutes[j]+' '+'-']=cn 
  #  print(dic)         
  #  NF=pd.DataFrame(dic,index=[0]) 
  #  print(dic)
   investingcomstrategy.loc[p]=dic
   p+=1
investingcomstrategy

#Checking if day first 1 min/2 min candle trend can give profit in next 5 min for data of 1 min candle from 04-09-20 to 09-09-20
valuestock1=pd.DataFrame()
for c in range(0,len(minutes1)):
    valuestock1[minutes1[c]]=investingcomstrategy.loc[:,[minutes1[c]+' '+'+', minutes1[c]+' '+'-']].sum(axis=1)
valuestock1
# print(valuestock1['1 min'].sum(axis=0)) 
sum2=valuestock1['2 min'].sum(axis=0)  
sum2=sum2/28 
print(valuestock1['2 min'].sum(axis=0))   
print('Percentage the stratergy work for 2 min is {val}%'.format(val=((sum2)*100/5)))

#Checking if day first 2 min candle trend can give profit in next 5 min for data of 1 min candle from 27-07-20 to 09-09-20
p=0
minutes1=['2 min']
investingcomstrategy=pd.DataFrame(columns =['Company','2 min +','2 min -'])
jum=[2]
co=0
for c in my_stocks1.columns.values:
   dic=[]
   cp=0
   cn=0
  #  dic['Company']=c
   dic.append(c)
   for j in range(0, len(minutes1)): 
     cp=0
     cn=0
    #  print(co)
     for i in range(0,len(my_stocks)-188,188):
            if (my_stocks1[c][jum[j]+i]-my_stocks1[c][i])>0 and (my_stocks1[c][5+i]-my_stocks1[c][i])>0:
              cp+=1
            if (my_stocks1[c][jum[j]+i]-my_stocks1[c][i])<0 and (my_stocks1[c][5+i]-my_stocks1[c][i])<0:
              cn+=1
            co+=1
     dic.append(cp)
     dic.append(cn)      
            # dic[c+' '+'positive'+' '+minutes[j]]=cp
            # dic[c+' '+'Negative'+' '+minutes[j]]=cn    
    #  dic[minutes[j]+' '+'+']=cp
    #  dic[minutes[j]+' '+'-']=cn 
  #  print(dic)         
  #  NF=pd.DataFrame(dic,index=[0]) 
  #  print(dic)
   investingcomstrategy.loc[p]=dic
   p+=1
investingcomstrategy

#Checking if day first 1 min/2 min candle trend can give profit in next 5 min for data of 1 min candle from 04-09-20 to 09-09-20
valuestock1=pd.DataFrame()
for c in range(0,len(minutes1)):
    valuestock1[minutes1[c]]=investingcomstrategy.loc[:,[minutes1[c]+' '+'+', minutes1[c]+' '+'-']].sum(axis=1)
valuestock1
# print(valuestock1['1 min'].sum(axis=0)) 
sum2=valuestock1['2 min'].sum(axis=0)  
sum2=sum2/28 
print(valuestock1['2 min'].sum(axis=0))   
print('Percentage the stratergy work for 2 min is {val}%'.format(val=((sum2)*100/44)))

ab.loc[0]=[2,4]
ab

